V0.1 tao


Outline: How to test

All in C. No C++
Compile tsc with O3; // TO BE CONFIRM
Compile the rest with O0; 

Ramp up;    testing; //codes in cache
[100 times] [10000 times]

Record all the points.
data should be stored as CSV
use excel to calc and generate the average and etc

Test_bench:
    while(testing not end):
	pid = fork()
	if (pid):
	    join()
	else:
	    run the testing
	    exit(0)
	

1. Measure overtime:
    Overtime of tsc_overhead // done


2. Call function: //MAX WIP
    C: foo(int) ; foo(int, int);
    C: foo(void*); //optional
    C++: foo(int) (poly....)


    record_time();
    foo(...argv)
    {
	record_time();
    }

    1. record time
    2. call function
    3. record time
3. System Call: //TODO
    // 1. No idea
    System Call
    
    read() -> Usermode: _read() -> | kernel mode: -> entry.S (system call table) -> read......-> asm..
    <<<<<

    foo() -> | kernel mode : system call ->(our codes)
    record();

4. Task create // done by tao
    kthread
    fork:
	1.content copy (delete the overhead of operator++)
	    record()
	    fork()
	    if (pid):
		i++
		record()
	    else:
		pass
	2.no content copy
	    record()
	    fork()
	    if (pid):
		record()
5. context switch time: //TODO
    rebuild the kernel? too expensive
    read the website's examples



